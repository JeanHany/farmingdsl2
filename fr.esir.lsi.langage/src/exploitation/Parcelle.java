/**
 */
package exploitation;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Parcelle</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link exploitation.Parcelle#isIrrigue <em>Irrigue</em>}</li>
 *   <li>{@link exploitation.Parcelle#getNbHectare <em>Nb Hectare</em>}</li>
 *   <li>{@link exploitation.Parcelle#getId <em>Id</em>}</li>
 *   <li>{@link exploitation.Parcelle#getSurface <em>Surface</em>}</li>
 * </ul>
 * </p>
 *
 * @see exploitation.ExploitationPackage#getParcelle()
 * @model
 * @generated
 */
public interface Parcelle extends EObject {
	/**
	 * Returns the value of the '<em><b>Irrigue</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Irrigue</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Irrigue</em>' attribute.
	 * @see #setIrrigue(boolean)
	 * @see exploitation.ExploitationPackage#getParcelle_Irrigue()
	 * @model
	 * @generated
	 */
	boolean isIrrigue();

	/**
	 * Sets the value of the '{@link exploitation.Parcelle#isIrrigue <em>Irrigue</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Irrigue</em>' attribute.
	 * @see #isIrrigue()
	 * @generated
	 */
	void setIrrigue(boolean value);

	/**
	 * Returns the value of the '<em><b>Nb Hectare</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Nb Hectare</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Nb Hectare</em>' attribute.
	 * @see #setNbHectare(int)
	 * @see exploitation.ExploitationPackage#getParcelle_NbHectare()
	 * @model
	 * @generated
	 */
	int getNbHectare();

	/**
	 * Sets the value of the '{@link exploitation.Parcelle#getNbHectare <em>Nb Hectare</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Nb Hectare</em>' attribute.
	 * @see #getNbHectare()
	 * @generated
	 */
	void setNbHectare(int value);

	/**
	 * Returns the value of the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Id</em>' attribute.
	 * @see #setId(int)
	 * @see exploitation.ExploitationPackage#getParcelle_Id()
	 * @model id="true"
	 * @generated
	 */
	int getId();

	/**
	 * Sets the value of the '{@link exploitation.Parcelle#getId <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Id</em>' attribute.
	 * @see #getId()
	 * @generated
	 */
	void setId(int value);

	/**
	 * Returns the value of the '<em><b>Surface</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@link exploitation.Surface#getParcelle <em>Parcelle</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Surface</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Surface</em>' container reference.
	 * @see #setSurface(Surface)
	 * @see exploitation.ExploitationPackage#getParcelle_Surface()
	 * @see exploitation.Surface#getParcelle
	 * @model opposite="Parcelle" required="true" transient="false"
	 * @generated
	 */
	Surface getSurface();

	/**
	 * Sets the value of the '{@link exploitation.Parcelle#getSurface <em>Surface</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Surface</em>' container reference.
	 * @see #getSurface()
	 * @generated
	 */
	void setSurface(Surface value);

} // Parcelle
