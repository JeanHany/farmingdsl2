/**
 */
package exploitation.impl;

import exploitation.Animals;
import exploitation.Elevage;
import exploitation.ExploitationPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Elevage</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link exploitation.impl.ElevageImpl#getAnimals <em>Animals</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ElevageImpl extends AtelierImpl implements Elevage {
	/**
	 * The default value of the '{@link #getAnimals() <em>Animals</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getAnimals()
	 * @generated
	 * @ordered
	 */
	protected static final Animals ANIMALS_EDEFAULT = Animals.OVIN;
	/**
	 * The cached value of the '{@link #getAnimals() <em>Animals</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getAnimals()
	 * @generated
	 * @ordered
	 */
	protected Animals animals = ANIMALS_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElevageImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return ExploitationPackage.Literals.ELEVAGE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Animals getAnimals() {
		return animals;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setAnimals(Animals newAnimals) {
		Animals oldAnimals = animals;
		animals = newAnimals == null ? ANIMALS_EDEFAULT : newAnimals;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ExploitationPackage.ELEVAGE__ANIMALS, oldAnimals, animals));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case ExploitationPackage.ELEVAGE__ANIMALS:
				return getAnimals();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case ExploitationPackage.ELEVAGE__ANIMALS:
				setAnimals((Animals)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case ExploitationPackage.ELEVAGE__ANIMALS:
				setAnimals(ANIMALS_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case ExploitationPackage.ELEVAGE__ANIMALS:
				return animals != ANIMALS_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (animals: ");
		result.append(animals);
		result.append(')');
		return result.toString();
	}

} //ElevageImpl
