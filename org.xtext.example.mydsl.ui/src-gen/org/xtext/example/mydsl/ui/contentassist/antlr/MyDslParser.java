/*
* generated by Xtext
*/
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAtelierAccess().getAlternatives(), "rule__Atelier__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getPeriodiciteAccess().getAlternatives(), "rule__Periodicite__Alternatives");
					put(grammarAccess.getMonthAccess().getAlternatives(), "rule__Month__Alternatives");
					put(grammarAccess.getActivityAccess().getGroup(), "rule__Activity__Group__0");
					put(grammarAccess.getActivityAccess().getGroup_2(), "rule__Activity__Group_2__0");
					put(grammarAccess.getActivityAccess().getGroup_3(), "rule__Activity__Group_3__0");
					put(grammarAccess.getActivityAccess().getGroup_4(), "rule__Activity__Group_4__0");
					put(grammarAccess.getActivityAccess().getGroup_4_3(), "rule__Activity__Group_4_3__0");
					put(grammarAccess.getActivityAccess().getGroup_5(), "rule__Activity__Group_5__0");
					put(grammarAccess.getActivityAccess().getGroup_5_3(), "rule__Activity__Group_5_3__0");
					put(grammarAccess.getActivityAccess().getGroup_6(), "rule__Activity__Group_6__0");
					put(grammarAccess.getActivityAccess().getGroup_6_3(), "rule__Activity__Group_6_3__0");
					put(grammarAccess.getRes_AllocAccess().getGroup(), "rule__Res_Alloc__Group__0");
					put(grammarAccess.getRes_AllocAccess().getGroup_3(), "rule__Res_Alloc__Group_3__0");
					put(grammarAccess.getRes_AllocAccess().getGroup_4(), "rule__Res_Alloc__Group_4__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_3(), "rule__Rule__Group_3__0");
					put(grammarAccess.getRuleAccess().getGroup_3_3(), "rule__Rule__Group_3_3__0");
					put(grammarAccess.getDateAccess().getGroup(), "rule__Date__Group__0");
					put(grammarAccess.getDateAccess().getGroup_3(), "rule__Date__Group_3__0");
					put(grammarAccess.getDateAccess().getGroup_4(), "rule__Date__Group_4__0");
					put(grammarAccess.getAtelier_ImplAccess().getGroup(), "rule__Atelier_Impl__Group__0");
					put(grammarAccess.getAtelier_ImplAccess().getGroup_3(), "rule__Atelier_Impl__Group_3__0");
					put(grammarAccess.getEIntegerObjectAccess().getGroup(), "rule__EIntegerObject__Group__0");
					put(grammarAccess.getResourceTypeAccess().getGroup(), "rule__ResourceType__Group__0");
					put(grammarAccess.getResourceTypeAccess().getGroup_4(), "rule__ResourceType__Group_4__0");
					put(grammarAccess.getRessourceAccess().getGroup(), "rule__Ressource__Group__0");
					put(grammarAccess.getRessourceAccess().getGroup_4(), "rule__Ressource__Group_4__0");
					put(grammarAccess.getPredicatAccess().getGroup(), "rule__Predicat__Group__0");
					put(grammarAccess.getElevageAccess().getGroup(), "rule__Elevage__Group__0");
					put(grammarAccess.getElevageAccess().getGroup_3(), "rule__Elevage__Group_3__0");
					put(grammarAccess.getCultureAccess().getGroup(), "rule__Culture__Group__0");
					put(grammarAccess.getCultureAccess().getGroup_3(), "rule__Culture__Group_3__0");
					put(grammarAccess.getActivityAccess().getPeriodiciteAssignment_2_1(), "rule__Activity__PeriodiciteAssignment_2_1");
					put(grammarAccess.getActivityAccess().getNameAssignment_3_1(), "rule__Activity__NameAssignment_3_1");
					put(grammarAccess.getActivityAccess().getAtelierAssignment_4_2(), "rule__Activity__AtelierAssignment_4_2");
					put(grammarAccess.getActivityAccess().getAtelierAssignment_4_3_1(), "rule__Activity__AtelierAssignment_4_3_1");
					put(grammarAccess.getActivityAccess().getRes_allocAssignment_5_2(), "rule__Activity__Res_allocAssignment_5_2");
					put(grammarAccess.getActivityAccess().getRes_allocAssignment_5_3_1(), "rule__Activity__Res_allocAssignment_5_3_1");
					put(grammarAccess.getActivityAccess().getRuleAssignment_6_2(), "rule__Activity__RuleAssignment_6_2");
					put(grammarAccess.getActivityAccess().getRuleAssignment_6_3_1(), "rule__Activity__RuleAssignment_6_3_1");
					put(grammarAccess.getActivityAccess().getFinAssignment_8(), "rule__Activity__FinAssignment_8");
					put(grammarAccess.getActivityAccess().getDebutAssignment_10(), "rule__Activity__DebutAssignment_10");
					put(grammarAccess.getRes_AllocAccess().getDurationAssignment_3_1(), "rule__Res_Alloc__DurationAssignment_3_1");
					put(grammarAccess.getRes_AllocAccess().getRes_typeAssignment_4_1(), "rule__Res_Alloc__Res_typeAssignment_4_1");
					put(grammarAccess.getRuleAccess().getPredicatAssignment_3_2(), "rule__Rule__PredicatAssignment_3_2");
					put(grammarAccess.getRuleAccess().getPredicatAssignment_3_3_1(), "rule__Rule__PredicatAssignment_3_3_1");
					put(grammarAccess.getDateAccess().getDayAssignment_3_1(), "rule__Date__DayAssignment_3_1");
					put(grammarAccess.getDateAccess().getMonthAssignment_4_1(), "rule__Date__MonthAssignment_4_1");
					put(grammarAccess.getAtelier_ImplAccess().getActivityAssignment_3_1(), "rule__Atelier_Impl__ActivityAssignment_3_1");
					put(grammarAccess.getResourceTypeAccess().getNameAssignment_2(), "rule__ResourceType__NameAssignment_2");
					put(grammarAccess.getResourceTypeAccess().getResourceAssignment_4_1(), "rule__ResourceType__ResourceAssignment_4_1");
					put(grammarAccess.getRessourceAccess().getNameAssignment_2(), "rule__Ressource__NameAssignment_2");
					put(grammarAccess.getRessourceAccess().getResourceTypeAssignment_4_1(), "rule__Ressource__ResourceTypeAssignment_4_1");
					put(grammarAccess.getElevageAccess().getActivityAssignment_3_1(), "rule__Elevage__ActivityAssignment_3_1");
					put(grammarAccess.getCultureAccess().getActivityAssignment_3_1(), "rule__Culture__ActivityAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleActivity();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
